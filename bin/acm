#!/usr/bin/env ruby
#
ENV["BUNDLE_GEMFILE"] ||= File.expand_path("../../Gemfile", __FILE__)

require "rubygems"
require "bundler/setup"

$:.unshift(File.expand_path("../../lib", __FILE__))
$:.unshift(File.expand_path("../../lib/acm", __FILE__))
$:.unshift(File.expand_path("../../lib/acm/models", __FILE__))

require "config"
require "thin"

config_file = nil

opts = OptionParser.new do |opts|
  opts.on("-c", "--config [ARG]", "Configuration File") do |opt|
    config_file = opt
  end
end

opts.parse!(ARGV.dup)

config_file ||= ::File.expand_path("../../config/acm.yml", __FILE__)
config = YAML.load_file(config_file)

ACM::Config.configure(config)

require "acm_controller"

@thin_server = Thin::Server.new("0.0.0.0", config["port"], :signals => false, :daemonize => true) do
  use Rack::CommonLogger
  map "/" do
    run ACM::Controller::RackController.new
  end
end

["TERM", "INT", "QUIT"].each do |signal|
  trap(signal) do
    @thin_server.stop!
  end
end

@thin_server.pid_file=ACM::Config.pid_file
@thin_server.log_file=ACM::Config.log_file
@thin_server.timeout=50
@thin_server.daemonize
    
@thin_server.start!
